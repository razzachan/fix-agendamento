try{self["workbox:core:7.2.0"]&&_()}catch(ae){}const e=(e,...t)=>{let s=e;return t.length>0&&(s+=` :: ${JSON.stringify(t)}`),s};class t extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}const s={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},n=e=>[s.prefix,e,s.suffix].filter(e=>e&&e.length>0).join("-"),a=e=>e||n(s.precache),r=e=>e||n(s.runtime);function i(e,t){const s=t();return e.waitUntil(s),s}try{self["workbox:precaching:7.2.0"]&&_()}catch(ae){}function o(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:s,url:n}=e;if(!n)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!s){const e=new URL(n,location.href);return{cacheKey:e.href,url:e.href}}const a=new URL(n,location.href),r=new URL(n,location.href);return a.searchParams.set("__WB_REVISION__",s),{cacheKey:a.href,url:r.href}}class c{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:s})=>{if("install"===e.type&&t&&t.originalRequest&&t.originalRequest instanceof Request){const e=t.originalRequest.url;s?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return s}}}class h{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:e,params:t})=>{const s=(null==t?void 0:t.cacheKey)||this._precacheController.getCacheKeyForURL(e.url);return s?new Request(s,{headers:e.headers}):e},this._precacheController=e}}let l;async function u(e,s){let n=null;if(e.url){n=new URL(e.url).origin}if(n!==self.location.origin)throw new t("cross-origin-copy-response",{origin:n});const a=e.clone(),r={headers:new Headers(a.headers),status:a.status,statusText:a.statusText},i=function(){if(void 0===l){const t=new Response("");if("body"in t)try{new Response(t.body),l=!0}catch(e){l=!1}l=!1}return l}()?a.body:await a.blob();return new Response(i,r)}function d(e,t){const s=new URL(e);for(const n of t)s.searchParams.delete(n);return s.href}class f{constructor(){this.promise=new Promise((e,t)=>{this.resolve=e,this.reject=t})}}const p=new Set;try{self["workbox:strategies:7.2.0"]&&_()}catch(ae){}function g(e){return"string"==typeof e?new Request(e):e}class w{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new f,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const s of this._plugins)this._pluginStateMap.set(s,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:s}=this;let n=g(e);if("navigate"===n.mode&&s instanceof FetchEvent&&s.preloadResponse){const e=await s.preloadResponse;if(e)return e}const a=this.hasCallback("fetchDidFail")?n.clone():null;try{for(const e of this.iterateCallbacks("requestWillFetch"))n=await e({request:n.clone(),event:s})}catch(i){if(i instanceof Error)throw new t("plugin-error-request-will-fetch",{thrownErrorMessage:i.message})}const r=n.clone();try{let e;e=await fetch(n,"navigate"===n.mode?void 0:this._strategy.fetchOptions);for(const t of this.iterateCallbacks("fetchDidSucceed"))e=await t({event:s,request:r,response:e});return e}catch(o){throw a&&await this.runCallbacks("fetchDidFail",{error:o,event:s,originalRequest:a.clone(),request:r.clone()}),o}}async fetchAndCachePut(e){const t=await this.fetch(e),s=t.clone();return this.waitUntil(this.cachePut(e,s)),t}async cacheMatch(e){const t=g(e);let s;const{cacheName:n,matchOptions:a}=this._strategy,r=await this.getCacheKey(t,"read"),i=Object.assign(Object.assign({},a),{cacheName:n});s=await caches.match(r,i);for(const o of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await o({cacheName:n,matchOptions:a,cachedResponse:s,request:r,event:this.event})||void 0;return s}async cachePut(e,s){const n=g(e);var a;await(a=0,new Promise(e=>setTimeout(e,a)));const r=await this.getCacheKey(n,"write");if(!s)throw new t("cache-put-with-no-response",{url:(i=r.url,new URL(String(i),location.href).href.replace(new RegExp(`^${location.origin}`),""))});var i;const o=await this._ensureResponseSafeToCache(s);if(!o)return!1;const{cacheName:c,matchOptions:h}=this._strategy,l=await self.caches.open(c),u=this.hasCallback("cacheDidUpdate"),f=u?await async function(e,t,s,n){const a=d(t.url,s);if(t.url===a)return e.match(t,n);const r=Object.assign(Object.assign({},n),{ignoreSearch:!0}),i=await e.keys(t,r);for(const o of i)if(a===d(o.url,s))return e.match(o,n)}(l,r.clone(),["__WB_REVISION__"],h):null;try{await l.put(r,u?o.clone():o)}catch(w){if(w instanceof Error)throw"QuotaExceededError"===w.name&&await async function(){for(const e of p)await e()}(),w}for(const t of this.iterateCallbacks("cacheDidUpdate"))await t({cacheName:c,oldResponse:f,newResponse:o.clone(),request:r,event:this.event});return!0}async getCacheKey(e,t){const s=`${e.url} | ${t}`;if(!this._cacheKeys[s]){let n=e;for(const e of this.iterateCallbacks("cacheKeyWillBeUsed"))n=g(await e({mode:t,request:n,event:this.event,params:this.params}));this._cacheKeys[s]=n}return this._cacheKeys[s]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const s of this.iterateCallbacks(e))await s(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if("function"==typeof t[e]){const s=this._pluginStateMap.get(t),n=n=>{const a=Object.assign(Object.assign({},n),{state:s});return t[e](a)};yield n}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,s=!1;for(const n of this.iterateCallbacks("cacheWillUpdate"))if(t=await n({request:this.request,response:t,event:this.event})||void 0,s=!0,!t)break;return s||t&&200!==t.status&&(t=void 0),t}}class m{constructor(e={}){this.cacheName=r(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,s="string"==typeof e.request?new Request(e.request):e.request,n="params"in e?e.params:void 0,a=new w(this,{event:t,request:s,params:n}),r=this._getResponse(a,s,t);return[r,this._awaitComplete(r,a,s,t)]}async _getResponse(e,s,n){let a;await e.runCallbacks("handlerWillStart",{event:n,request:s});try{if(a=await this._handle(s,e),!a||"error"===a.type)throw new t("no-response",{url:s.url})}catch(r){if(r instanceof Error)for(const t of e.iterateCallbacks("handlerDidError"))if(a=await t({error:r,event:n,request:s}),a)break;if(!a)throw r}for(const t of e.iterateCallbacks("handlerWillRespond"))a=await t({event:n,request:s,response:a});return a}async _awaitComplete(e,t,s,n){let a,r;try{a=await e}catch(i){}try{await t.runCallbacks("handlerDidRespond",{event:n,request:s,response:a}),await t.doneWaiting()}catch(o){o instanceof Error&&(r=o)}if(await t.runCallbacks("handlerDidComplete",{event:n,request:s,response:a,error:r}),t.destroy(),r)throw r}}class y extends m{constructor(e={}){e.cacheName=a(e.cacheName),super(e),this._fallbackToNetwork=!1!==e.fallbackToNetwork,this.plugins.push(y.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){const s=await t.cacheMatch(e);return s||(t.event&&"install"===t.event.type?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,s){let n;const a=s.params||{};if(!this._fallbackToNetwork)throw new t("missing-precache-entry",{cacheName:this.cacheName,url:e.url});{const t=a.integrity,r=e.integrity,i=!r||r===t;n=await s.fetch(new Request(e,{integrity:"no-cors"!==e.mode?r||t:void 0})),t&&i&&"no-cors"!==e.mode&&(this._useDefaultCacheabilityPluginIfNeeded(),await s.cachePut(e,n.clone()))}return n}async _handleInstall(e,s){this._useDefaultCacheabilityPluginIfNeeded();const n=await s.fetch(e);if(!(await s.cachePut(e,n.clone())))throw new t("bad-precaching-response",{url:e.url,status:n.status});return n}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[s,n]of this.plugins.entries())n!==y.copyRedirectedCacheableResponsesPlugin&&(n===y.defaultPrecacheCacheabilityPlugin&&(e=s),n.cacheWillUpdate&&t++);0===t?this.plugins.push(y.defaultPrecacheCacheabilityPlugin):t>1&&null!==e&&this.plugins.splice(e,1)}}y.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:e})=>!e||e.status>=400?null:e},y.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:e})=>e.redirected?await u(e):e};class v{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:s=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new y({cacheName:a(e),plugins:[...t,new h({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){const s=[];for(const n of e){"string"==typeof n?s.push(n):n&&void 0===n.revision&&s.push(n.url);const{cacheKey:e,url:a}=o(n),r="string"!=typeof n&&n.revision?"reload":"default";if(this._urlsToCacheKeys.has(a)&&this._urlsToCacheKeys.get(a)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(a),secondEntry:e});if("string"!=typeof n&&n.integrity){if(this._cacheKeysToIntegrities.has(e)&&this._cacheKeysToIntegrities.get(e)!==n.integrity)throw new t("add-to-cache-list-conflicting-integrities",{url:a});this._cacheKeysToIntegrities.set(e,n.integrity)}if(this._urlsToCacheKeys.set(a,e),this._urlsToCacheModes.set(a,r),s.length>0){const e=`Workbox is precaching URLs without revision info: ${s.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}install(e){return i(e,async()=>{const t=new c;this.strategy.plugins.push(t);for(const[a,r]of this._urlsToCacheKeys){const t=this._cacheKeysToIntegrities.get(r),s=this._urlsToCacheModes.get(a),n=new Request(a,{integrity:t,cache:s,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:r},request:n,event:e}))}const{updatedURLs:s,notUpdatedURLs:n}=t;return{updatedURLs:s,notUpdatedURLs:n}})}activate(e){return i(e,async()=>{const e=await self.caches.open(this.strategy.cacheName),t=await e.keys(),s=new Set(this._urlsToCacheKeys.values()),n=[];for(const a of t)s.has(a.url)||(await e.delete(a),n.push(a.url));return{deletedURLs:n}})}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this.strategy.cacheName)).match(s)}}createHandlerBoundToURL(e){const s=this.getCacheKeyForURL(e);if(!s)throw new t("non-precached-url",{url:e});return t=>(t.request=new Request(e),t.params=Object.assign({cacheKey:s},t.params),this.strategy.handle(t))}}let b;const R=()=>(b||(b=new v),b);try{self["workbox:routing:7.2.0"]&&_()}catch(ae){}const x=e=>e&&"object"==typeof e?e:{handle:e};class C{constructor(e,t,s="GET"){this.handler=x(t),this.match=e,this.method=s}setCatchHandler(e){this.catchHandler=x(e)}}class E extends C{constructor(e,t,s){super(({url:t})=>{const s=e.exec(t.href);if(s&&(t.origin===location.origin||0===s.index))return s.slice(1)},t,s)}}class L{constructor(){this._routes=new Map,this._defaultHandlerMap=new Map}get routes(){return this._routes}addFetchListener(){self.addEventListener("fetch",e=>{const{request:t}=e,s=this.handleRequest({request:t,event:e});s&&e.respondWith(s)})}addCacheListener(){self.addEventListener("message",e=>{if(e.data&&"CACHE_URLS"===e.data.type){const{payload:t}=e.data,s=Promise.all(t.urlsToCache.map(t=>{"string"==typeof t&&(t=[t]);const s=new Request(...t);return this.handleRequest({request:s,event:e})}));e.waitUntil(s),e.ports&&e.ports[0]&&s.then(()=>e.ports[0].postMessage(!0))}})}handleRequest({request:e,event:t}){const s=new URL(e.url,location.href);if(!s.protocol.startsWith("http"))return;const n=s.origin===location.origin,{params:a,route:r}=this.findMatchingRoute({event:t,request:e,sameOrigin:n,url:s});let i=r&&r.handler;const o=e.method;if(!i&&this._defaultHandlerMap.has(o)&&(i=this._defaultHandlerMap.get(o)),!i)return;let c;try{c=i.handle({url:s,request:e,event:t,params:a})}catch(l){c=Promise.reject(l)}const h=r&&r.catchHandler;return c instanceof Promise&&(this._catchHandler||h)&&(c=c.catch(async n=>{if(h)try{return await h.handle({url:s,request:e,event:t,params:a})}catch(r){r instanceof Error&&(n=r)}if(this._catchHandler)return this._catchHandler.handle({url:s,request:e,event:t});throw n})),c}findMatchingRoute({url:e,sameOrigin:t,request:s,event:n}){const a=this._routes.get(s.method)||[];for(const r of a){let a;const i=r.match({url:e,sameOrigin:t,request:s,event:n});if(i)return a=i,(Array.isArray(a)&&0===a.length||i.constructor===Object&&0===Object.keys(i).length||"boolean"==typeof i)&&(a=void 0),{route:r,params:a}}return{}}setDefaultHandler(e,t="GET"){this._defaultHandlerMap.set(t,x(e))}setCatchHandler(e){this._catchHandler=x(e)}registerRoute(e){this._routes.has(e.method)||this._routes.set(e.method,[]),this._routes.get(e.method).push(e)}unregisterRoute(e){if(!this._routes.has(e.method))throw new t("unregister-route-but-not-found-with-method",{method:e.method});const s=this._routes.get(e.method).indexOf(e);if(!(s>-1))throw new t("unregister-route-route-not-registered");this._routes.get(e.method).splice(s,1)}}let q;function k(e,s,n){let a;if("string"==typeof e){const t=new URL(e,location.href);a=new C(({url:e})=>e.href===t.href,s,n)}else if(e instanceof RegExp)a=new E(e,s,n);else if("function"==typeof e)a=new C(e,s,n);else{if(!(e instanceof C))throw new t("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});a=e}return(q||(q=new L,q.addFetchListener(),q.addCacheListener()),q).registerRoute(a),a}class U extends C{constructor(e,t){super(({request:s})=>{const n=e.getURLsToCacheKeys();for(const a of function*(e,{ignoreURLParametersMatching:t=[/^utm_/,/^fbclid$/],directoryIndex:s="index.html",cleanURLs:n=!0,urlManipulation:a}={}){const r=new URL(e,location.href);r.hash="",yield r.href;const i=function(e,t=[]){for(const s of[...e.searchParams.keys()])t.some(e=>e.test(s))&&e.searchParams.delete(s);return e}(r,t);if(yield i.href,s&&i.pathname.endsWith("/")){const e=new URL(i.href);e.pathname+=s,yield e.href}if(n){const e=new URL(i.href);e.pathname+=".html",yield e.href}if(a){const e=a({url:r});for(const t of e)yield t.href}}(s.url,t)){const t=n.get(a);if(t){return{cacheKey:t,integrity:e.getIntegrityForCacheKey(t)}}}},e.strategy)}}const D={cacheWillUpdate:async({response:e})=>200===e.status||0===e.status?e:null};function T(e){e.then(()=>{})}let S,N;const W=new WeakMap,I=new WeakMap,P=new WeakMap,K=new WeakMap,M=new WeakMap;let A={get(e,t,s){if(e instanceof IDBTransaction){if("done"===t)return I.get(e);if("objectStoreNames"===t)return e.objectStoreNames||P.get(e);if("store"===t)return s.objectStoreNames[1]?void 0:s.objectStore(s.objectStoreNames[0])}return j(e[t])},set:(e,t,s)=>(e[t]=s,!0),has:(e,t)=>e instanceof IDBTransaction&&("done"===t||"store"===t)||t in e};function O(e){return e!==IDBDatabase.prototype.transaction||"objectStoreNames"in IDBTransaction.prototype?(N||(N=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])).includes(e)?function(...t){return e.apply(F(this),t),j(W.get(this))}:function(...t){return j(e.apply(F(this),t))}:function(t,...s){const n=e.call(F(this),t,...s);return P.set(n,t.sort?t.sort():[t]),j(n)}}function B(e){return"function"==typeof e?O(e):(e instanceof IDBTransaction&&function(e){if(I.has(e))return;const t=new Promise((t,s)=>{const n=()=>{e.removeEventListener("complete",a),e.removeEventListener("error",r),e.removeEventListener("abort",r)},a=()=>{t(),n()},r=()=>{s(e.error||new DOMException("AbortError","AbortError")),n()};e.addEventListener("complete",a),e.addEventListener("error",r),e.addEventListener("abort",r)});I.set(e,t)}(e),t=e,(S||(S=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])).some(e=>t instanceof e)?new Proxy(e,A):e);var t}function j(e){if(e instanceof IDBRequest)return function(e){const t=new Promise((t,s)=>{const n=()=>{e.removeEventListener("success",a),e.removeEventListener("error",r)},a=()=>{t(j(e.result)),n()},r=()=>{s(e.error),n()};e.addEventListener("success",a),e.addEventListener("error",r)});return t.then(t=>{t instanceof IDBCursor&&W.set(t,e)}).catch(()=>{}),M.set(t,e),t}(e);if(K.has(e))return K.get(e);const t=B(e);return t!==e&&(K.set(e,t),M.set(t,e)),t}const F=e=>M.get(e);const H=["get","getKey","getAll","getAllKeys","count"],V=["put","add","delete","clear"],$=new Map;function z(e,t){if(!(e instanceof IDBDatabase)||t in e||"string"!=typeof t)return;if($.get(t))return $.get(t);const s=t.replace(/FromIndex$/,""),n=t!==s,a=V.includes(s);if(!(s in(n?IDBIndex:IDBObjectStore).prototype)||!a&&!H.includes(s))return;const r=async function(e,...t){const r=this.transaction(e,a?"readwrite":"readonly");let i=r.store;return n&&(i=i.index(t.shift())),(await Promise.all([i[s](...t),a&&r.done]))[0]};return $.set(t,r),r}A=(e=>({...e,get:(t,s,n)=>z(t,s)||e.get(t,s,n),has:(t,s)=>!!z(t,s)||e.has(t,s)}))(A);try{self["workbox:expiration:7.2.0"]&&_()}catch(ae){}const G="cache-entries",Q=e=>{const t=new URL(e,location.href);return t.hash="",t.href};class J{constructor(e){this._db=null,this._cacheName=e}_upgradeDb(e){const t=e.createObjectStore(G,{keyPath:"id"});t.createIndex("cacheName","cacheName",{unique:!1}),t.createIndex("timestamp","timestamp",{unique:!1})}_upgradeDbAndDeleteOldDbs(e){this._upgradeDb(e),this._cacheName&&function(e,{blocked:t}={}){const s=indexedDB.deleteDatabase(e);t&&s.addEventListener("blocked",e=>t(e.oldVersion,e)),j(s).then(()=>{})}(this._cacheName)}async setTimestamp(e,t){const s={url:e=Q(e),timestamp:t,cacheName:this._cacheName,id:this._getId(e)},n=(await this.getDb()).transaction(G,"readwrite",{durability:"relaxed"});await n.store.put(s),await n.done}async getTimestamp(e){const t=await this.getDb(),s=await t.get(G,this._getId(e));return null==s?void 0:s.timestamp}async expireEntries(e,t){const s=await this.getDb();let n=await s.transaction(G).store.index("timestamp").openCursor(null,"prev");const a=[];let r=0;for(;n;){const s=n.value;s.cacheName===this._cacheName&&(e&&s.timestamp<e||t&&r>=t?a.push(n.value):r++),n=await n.continue()}const i=[];for(const o of a)await s.delete(G,o.id),i.push(o.url);return i}_getId(e){return this._cacheName+"|"+Q(e)}async getDb(){return this._db||(this._db=await function(e,t,{blocked:s,upgrade:n,blocking:a,terminated:r}={}){const i=indexedDB.open(e,t),o=j(i);return n&&i.addEventListener("upgradeneeded",e=>{n(j(i.result),e.oldVersion,e.newVersion,j(i.transaction),e)}),s&&i.addEventListener("blocked",e=>s(e.oldVersion,e.newVersion,e)),o.then(e=>{r&&e.addEventListener("close",()=>r()),a&&e.addEventListener("versionchange",e=>a(e.oldVersion,e.newVersion,e))}).catch(()=>{}),o}("workbox-expiration",1,{upgrade:this._upgradeDbAndDeleteOldDbs.bind(this)})),this._db}}class X{constructor(e,t={}){this._isRunning=!1,this._rerunRequested=!1,this._maxEntries=t.maxEntries,this._maxAgeSeconds=t.maxAgeSeconds,this._matchOptions=t.matchOptions,this._cacheName=e,this._timestampModel=new J(e)}async expireEntries(){if(this._isRunning)return void(this._rerunRequested=!0);this._isRunning=!0;const e=this._maxAgeSeconds?Date.now()-1e3*this._maxAgeSeconds:0,t=await this._timestampModel.expireEntries(e,this._maxEntries),s=await self.caches.open(this._cacheName);for(const n of t)await s.delete(n,this._matchOptions);this._isRunning=!1,this._rerunRequested&&(this._rerunRequested=!1,T(this.expireEntries()))}async updateTimestamp(e){await this._timestampModel.setTimestamp(e,Date.now())}async isURLExpired(e){if(this._maxAgeSeconds){const t=await this._timestampModel.getTimestamp(e),s=Date.now()-1e3*this._maxAgeSeconds;return void 0===t||t<s}return!1}async delete(){this._rerunRequested=!1,await this._timestampModel.expireEntries(1/0)}}class Y{constructor(e={}){this.cachedResponseWillBeUsed=async({event:e,request:t,cacheName:s,cachedResponse:n})=>{if(!n)return null;const a=this._isResponseDateFresh(n),r=this._getCacheExpiration(s);T(r.expireEntries());const i=r.updateTimestamp(t.url);if(e)try{e.waitUntil(i)}catch(o){}return a?n:null},this.cacheDidUpdate=async({cacheName:e,request:t})=>{const s=this._getCacheExpiration(e);await s.updateTimestamp(t.url),await s.expireEntries()},this._config=e,this._maxAgeSeconds=e.maxAgeSeconds,this._cacheExpirations=new Map,e.purgeOnQuotaError&&function(e){p.add(e)}(()=>this.deleteCacheAndMetadata())}_getCacheExpiration(e){if(e===r())throw new t("expire-custom-caches-only");let s=this._cacheExpirations.get(e);return s||(s=new X(e,this._config),this._cacheExpirations.set(e,s)),s}_isResponseDateFresh(e){if(!this._maxAgeSeconds)return!0;const t=this._getDateHeaderTimestamp(e);if(null===t)return!0;return t>=Date.now()-1e3*this._maxAgeSeconds}_getDateHeaderTimestamp(e){if(!e.headers.has("date"))return null;const t=e.headers.get("date"),s=new Date(t).getTime();return isNaN(s)?null:s}async deleteCacheAndMetadata(){for(const[e,t]of this._cacheExpirations)await self.caches.delete(e),await t.delete();this._cacheExpirations=new Map}}var Z;(function(e){R().precache(e)})([{"revision":"b936b69f6f789b942c0b5d01b24e63d2","url":"api/mobile-order-details.js"},{"revision":null,"url":"assets/browser-Ce8V9tp4.js"},{"revision":null,"url":"assets/charts-CHk0KVF9.js"},{"revision":null,"url":"assets/index-Bu0ZvL3X.css"},{"revision":null,"url":"assets/index-DkkHJc6l.js"},{"revision":null,"url":"assets/index.es-ubTRc-Jm.js"},{"revision":null,"url":"assets/maps-DtoSc9qE.js"},{"revision":null,"url":"assets/purify.es-BOcia5MP.js"},{"revision":null,"url":"assets/ui-CvXZ6xB1.js"},{"revision":null,"url":"assets/utils-Cm7qYSum.js"},{"revision":null,"url":"assets/vendor-C0Yfakdp.js"},{"revision":"e4c2bad45dc23a011ad20bc10d391d9d","url":"clear-cache.html"},{"revision":"b0549b56529de0d86a28b4785c4fec0f","url":"debug-production.html"},{"revision":"ad1a6f4c5183484aea75bd061d11fc25","url":"favicon.ico"},{"revision":"d8905d2e659918fc12fb0476791ba8f6","url":"favicon.png"},{"revision":"7768a8285c0346d46381b8599cebd4c6","url":"favicon.svg"},{"revision":"d8905d2e659918fc12fb0476791ba8f6","url":"fix fogoes.png"},{"revision":"a6eccdafd95d574183b892581b14e093","url":"fixeletros-landing.html"},{"revision":"a170b6aa61b1006738f3d9bf0bfda160","url":"icons/icon-128.png"},{"revision":"74db3752e14f39d461a0e67e8fa47146","url":"icons/icon-144.png"},{"revision":"17309c33c5a825f060fae0e10c1d07d0","url":"icons/icon-152.png"},{"revision":"5274d664806058d30562cf079fccf2f1","url":"icons/icon-192.png"},{"revision":"597be89c2b0aa3637d363edf4a245129","url":"icons/icon-384.png"},{"revision":"b803e0c655f1db691caa302fa60a2b60","url":"icons/icon-512.png"},{"revision":"c2a9342798c059d27e0c2b407b726420","url":"icons/icon-72.png"},{"revision":"d7ec3b10a7efb319e75990c02d113deb","url":"icons/icon-96.png"},{"revision":"7182dcc596bb01024b5b511ef044471c","url":"icons/icon-maskable-192.png"},{"revision":"2d053bebba9eb2676b14903e8dce85ac","url":"icons/icon-maskable-512.png"},{"revision":"03d399da0f0c1edccd70b37f26172c46","url":"icons/shortcut-calendar.png"},{"revision":"ba78be10daee4cc54c0d68a39255af3c","url":"icons/shortcut-new-order.png"},{"revision":"9ed13630d0e370c89717ae163f3e2b5d","url":"icons/shortcut-reports.png"},{"revision":"f2c31e8d2347e77c11b0a171b96068e9","url":"icons/shortcut-tracking.png"},{"revision":"6380cd7879fc98e9011bb26c282c6edd","url":"index.html"},{"revision":"0c13ea5f7ad0a8346b70a99fd6da2cd4","url":"landing.html"},{"revision":"d6be1b369d9fc5406e417a5b29b4ea1b","url":"markers/urgent-marker.png"},{"revision":"fe93201c026eea290989f0f5a63e2f3d","url":"markers/urgent-marker.svg"},{"revision":"1ae322c6d8022dcb6df03ab0e95e3d20","url":"mobile-order-popup.html"},{"revision":"5b3b8c51f171b4b7f75c2b6ac207fbbe","url":"mobile-orders.html"},{"revision":"6f4e25751d22b4097b9e740d3dcd51df","url":"offline.html"},{"revision":"35707bd9960ba5281c72af927b79291f","url":"placeholder.svg"},{"revision":"21b8cbc5f46d32b3d17533d867ab9759","url":"privacy.html"},{"revision":"1872c500de691dce40960bb85481de07","url":"registerSW.js"},{"revision":"32d8b85de07773de64ae96710cc4a14c","url":"terms.html"},{"revision":"bb1730aa9d9988a672bb99ea645aee77","url":"test-auth-final.html"},{"revision":"2ea57cf7c4ff5c7528911ce0327855e6","url":"test-auth.html"},{"revision":"3a13be7ce9a02ec55ec0c2c7e02d16d9","url":"test-clientechat-duas-etapas.html"},{"revision":"2b7aed4b7cd4da2da9a2961843913b2d","url":"test-multiplos-equipamentos.html"},{"revision":"4ddd46ab5b97a5fc7238ea42008d15f0","url":"test-qr-break.html"},{"revision":"7395d3d6acd3e83880f267872dd33bb2","url":"test-supabase.html"},{"revision":"1f46375d0183308fb4b39aef473a066d","url":"training-images/fogoes/cooktop_inox/363fb196d7f989ed33f977484d858079.png"},{"revision":"6dc756f7cccdbaa72dbae7f00666781f","url":"training-images/fogoes/floor_premium/364eeecdf264f8332a1a73a12f21c165.png"},{"revision":"32e47d14b0b70d6b7a70eddc9cd9c0fd","url":"training-images/fogoes/floor_premium/73f2250d4257628490ebbb3c2c1ab29f.png"},{"revision":"a170b6aa61b1006738f3d9bf0bfda160","url":"icons/icon-128.png"},{"revision":"74db3752e14f39d461a0e67e8fa47146","url":"icons/icon-144.png"},{"revision":"17309c33c5a825f060fae0e10c1d07d0","url":"icons/icon-152.png"},{"revision":"5274d664806058d30562cf079fccf2f1","url":"icons/icon-192.png"},{"revision":"597be89c2b0aa3637d363edf4a245129","url":"icons/icon-384.png"},{"revision":"b803e0c655f1db691caa302fa60a2b60","url":"icons/icon-512.png"},{"revision":"c2a9342798c059d27e0c2b407b726420","url":"icons/icon-72.png"},{"revision":"d7ec3b10a7efb319e75990c02d113deb","url":"icons/icon-96.png"},{"revision":"7182dcc596bb01024b5b511ef044471c","url":"icons/icon-maskable-192.png"},{"revision":"2d053bebba9eb2676b14903e8dce85ac","url":"icons/icon-maskable-512.png"},{"revision":"03d399da0f0c1edccd70b37f26172c46","url":"icons/shortcut-calendar.png"},{"revision":"ba78be10daee4cc54c0d68a39255af3c","url":"icons/shortcut-new-order.png"},{"revision":"9ed13630d0e370c89717ae163f3e2b5d","url":"icons/shortcut-reports.png"},{"revision":"f2c31e8d2347e77c11b0a171b96068e9","url":"icons/shortcut-tracking.png"},{"revision":"cb69ff2ab1894949170feb364a6d276b","url":"manifest.webmanifest"}]),function(e){const t=R();k(new U(t,e))}(Z),self.addEventListener("activate",e=>{const t=a();e.waitUntil((async(e,t="-precache-")=>{const s=(await self.caches.keys()).filter(s=>s.includes(t)&&s.includes(self.registration.scope)&&s!==e);return await Promise.all(s.map(e=>self.caches.delete(e))),s})(t).then(e=>{}))});const ee=[/\/api\//,/\/auth\//,/supabase/,/\.json$/],te=[/\.(?:png|jpg|jpeg|svg|gif|webp|ico)$/,/\.(?:woff|woff2|ttf|eot)$/];async function se(e){console.log("[SW] Sincronizando item:",e)}async function ne(e){console.log("[SW] Removendo da fila:",e)}k(({request:e,url:t})=>ee.some(e=>e.test(t.pathname)),new class extends m{constructor(e={}){super(e),this.plugins.some(e=>"cacheWillUpdate"in e)||this.plugins.unshift(D),this._networkTimeoutSeconds=e.networkTimeoutSeconds||0}async _handle(e,s){const n=[],a=[];let r;if(this._networkTimeoutSeconds){const{id:t,promise:i}=this._getTimeoutPromise({request:e,logs:n,handler:s});r=t,a.push(i)}const i=this._getNetworkPromise({timeoutId:r,request:e,logs:n,handler:s});a.push(i);const o=await s.waitUntil((async()=>await s.waitUntil(Promise.race(a))||await i)());if(!o)throw new t("no-response",{url:e.url});return o}_getTimeoutPromise({request:e,logs:t,handler:s}){let n;return{promise:new Promise(t=>{n=setTimeout(async()=>{t(await s.cacheMatch(e))},1e3*this._networkTimeoutSeconds)}),id:n}}async _getNetworkPromise({timeoutId:e,request:t,logs:s,handler:n}){let a,r;try{r=await n.fetchAndCachePut(t)}catch(i){i instanceof Error&&(a=i)}return e&&clearTimeout(e),!a&&r||(r=await n.cacheMatch(t)),r}}({cacheName:"api-cache",plugins:[new Y({maxEntries:100,maxAgeSeconds:86400})]})),k(({request:e})=>te.some(t=>t.test(e.url)),new class extends m{async _handle(e,s){let n,a=await s.cacheMatch(e);if(!a)try{a=await s.fetchAndCachePut(e)}catch(r){r instanceof Error&&(n=r)}if(!a)throw new t("no-response",{url:e.url,error:n});return a}}({cacheName:"static-assets",plugins:[new Y({maxEntries:200,maxAgeSeconds:2592e3})]})),k(({request:e})=>"navigate"===e.mode,new class extends m{constructor(e={}){super(e),this.plugins.some(e=>"cacheWillUpdate"in e)||this.plugins.unshift(D)}async _handle(e,s){const n=s.fetchAndCachePut(e).catch(()=>{});s.waitUntil(n);let a,r=await s.cacheMatch(e);if(r);else try{r=await n}catch(i){i instanceof Error&&(a=i)}if(!r)throw new t("no-response",{url:e.url,error:a});return r}}({cacheName:"pages-cache",plugins:[new Y({maxEntries:50,maxAgeSeconds:604800})]})),self.addEventListener("fetch",e=>{"navigate"===e.request.mode&&e.respondWith(fetch(e.request).catch(()=>{if(!ee.some(t=>t.test(e.request.url)))return caches.match("/offline.html")||new Response("Offline");throw new Error("Network failed")}))}),self.addEventListener("push",e=>{console.log("[SW] Push recebido:",e);let t={title:"Fix Fogões",body:"Nova atualização disponível",icon:"/icons/icon-192.png",badge:"/icons/icon-72.png",vibrate:[100,50,100],data:{dateOfArrival:Date.now(),primaryKey:1},actions:[{action:"explore",title:"Ver Detalhes",icon:"/icons/icon-96.png"},{action:"close",title:"Fechar",icon:"/icons/icon-96.png"}]};if(e.data)try{const s=e.data.json();t={...t,...s}}catch(s){console.error("[SW] Erro ao parsear dados do push:",s)}e.waitUntil(self.registration.showNotification(t.title,t))}),self.addEventListener("notificationclick",e=>{console.log("[SW] Notificação clicada:",e),e.notification.close(),"explore"===e.action?e.waitUntil(self.clients.openWindow("/")):"close"===e.action||e.waitUntil(self.clients.openWindow("/"))}),self.addEventListener("sync",e=>{console.log("[SW] Background Sync:",e.tag),"background-sync"===e.tag&&e.waitUntil(async function(){try{console.log("[SW] Executando sincronização em background...");const t=await async function(){return[]}();for(const s of t)try{await se(s),await ne(s.id),console.log("[SW] Item sincronizado:",s.id)}catch(e){console.error("[SW] Erro ao sincronizar item:",s.id,e)}}catch(e){console.error("[SW] Erro na sincronização:",e)}}())}),self.addEventListener("message",e=>{console.log("[SW] Mensagem recebida:",e.data),e.data&&"SKIP_WAITING"===e.data.type&&self.skipWaiting()}),self.addEventListener("install",e=>{console.log("[SW] Instalando Service Worker..."),self.skipWaiting()}),self.addEventListener("activate",e=>{console.log("[SW] Ativando Service Worker..."),e.waitUntil(self.clients.claim())}),console.log("[SW] Service Worker customizado carregado - Fix Fogões v2.1.0");
