#!/usr/bin/env python3
"""
Teste final do bot para verificar se est√° gerando or√ßamentos
"""

import requests
import json
import time

def send_message(from_number, message):
    """Envia uma mensagem para o bot"""
    webhook_url = "https://enchanting-light-production.up.railway.app/test-message"
    payload = {
        "from": from_number,
        "body": message
    }
    
    try:
        response = requests.post(webhook_url, json=payload, timeout=30)
        if response.status_code == 200:
            data = response.json()
            reply = data.get("reply", "Sem resposta")
            # Se reply √© um dict, extrair o texto
            if isinstance(reply, dict):
                return reply.get("text", str(reply))
            return str(reply)
        else:
            return f"Erro {response.status_code}: {response.text}"
    except Exception as e:
        return f"Erro: {e}"

def test_bot_or√ßamento():
    """Testa se o bot gera or√ßamento"""
    from_number = "5548888888888"  # N√∫mero diferente para nova conversa
    
    print("ü§ñ Testando gera√ß√£o de or√ßamento...")
    
    # 1. Mensagem inicial
    print("\n1. Mensagem inicial...")
    reply1 = send_message(from_number, "Preciso de or√ßamento para meu fog√£o")
    print(f"Bot: {reply1}")
    
    # 2. Informar equipamento e marca
    print("\n2. Informando equipamento...")
    reply2 = send_message(from_number, "Fog√£o Brastemp a g√°s que n√£o acende")
    print(f"Bot: {reply2}")
    
    # 3. Escolher tipo se perguntado
    if "g√°s" in reply2 or "el√©trico" in reply2:
        print("\n3. Escolhendo tipo...")
        reply3 = send_message(from_number, "1")  # Fog√£o a g√°s
        print(f"Bot: {reply3}")
        
        # Verificar se gerou or√ßamento
        if "R$" in reply3 or "valor" in reply3.lower() or "or√ßamento" in reply3.lower():
            print("\n‚úÖ OR√áAMENTO GERADO!")
            return True
    
    # Verificar nas respostas anteriores
    all_replies = f"{reply1} {reply2}"
    if "R$" in all_replies or "valor" in all_replies.lower() or "or√ßamento" in all_replies.lower():
        print("\n‚úÖ OR√áAMENTO GERADO!")
        return True
    
    print("\n‚ö†Ô∏è Or√ßamento n√£o detectado ainda.")
    return False

if __name__ == "__main__":
    success = test_bot_or√ßamento()
    if success:
        print("\nüéâ BOT EST√Å FUNCIONANDO - GERANDO OR√áAMENTOS!")
    else:
        print("\n‚ö†Ô∏è Bot n√£o gerou or√ßamento vis√≠vel.")
